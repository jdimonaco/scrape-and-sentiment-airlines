from typing import Tuple, List
import pandas as pd
from gensim import corpora
import gensim
import pyLDAvis
import pyLDAvis.gensim_models
import matplotlib.pyplot as plt
import webbrowser

# Topic Modeling with LDA
def preprocess_for_topic_modelling(data, review_column="Clean_Review"):
    """
   Prepares text for topic modeling.

   Steps
    -----
    - Get the cleaned reviews from the specified column in the DataFrame.
    - Convert the list of cleaned reviews (already tokenized) into a format suitable for topic modeling.
    - Create a dictionary and a corpus (Bag of Words) directly from the processed reviews.

    Parameters
    ----------
    The DataFrame containing the reviews

    Returns
    -------
    A tuple containing the dictionary and corpus for topic modeling

    Example Usage
    -------------
    preprocess_for_topic_modelling(data= data, review_column='Clean_Review')
    """
    processed_reviews = data[review_column].tolist()

    processed_reviews = [review.split() for review in processed_reviews]

    dictionary = corpora.Dictionary(processed_reviews)
    corpus = [dictionary.doc2bow(review) for review in processed_reviews]

    return dictionary, corpus

# Apply LDA Model
def apply_lda_model(corpus, dictionary, num_topics=5):
    """
    Apply LDA model for topic modeling using the given corpus and dictionary.

    Steps
    -----
    - Set the number of topics to find.
    - Initialise the LDA model with the given corpus, dictionary, and number of topics.
    - Train the model with multiple passes over the corpus.
    - Display the top words for each identified topic.

    Parameters
    ----------
    The corpus in Bag of Words
    The dictionary mapping word IDs to words
    The number of topics to identify, by default 5

    Returns
    -------
    The trained LDA model

    Example Usage
    -------------
    lda_model = apply_lda_model(corpus, dictionary, num_topics=5)
    """

    num_topics = 7
    lda_model = gensim.models.LdaMulticore(corpus, num_topics=num_topics,
                                          id2word=dictionary, passes=10,
                                          workers=2)

    topics = lda_model.show_topics(num_topics=num_topics, num_words=5, formatted=False)

    print("Identified Topics:\n")
    for topic_id, topic in topics:
        print(f"Topic #{topic_id + 1}: {', '.join([word for word, prob in topic])}")

    return lda_model

# Visualisation of LDA Topics
def visualise_lda_topics(lda_model, corpus, dictionary, output_file="lda_visualisation.html"):
    """
    Visualise the topics generated by LDA using pyLDAvis.
    """
    vis_data = pyLDAvis.gensim_models.prepare(lda_model, corpus, dictionary, mds='mmds')

    # Save the visualisation to an HTML file
    pyLDAvis.save_html(vis_data, output_file)

    # Open the visualisation in the default web browser
    webbrowser.open(output_file)
    print(f"LDA visualisation saved to {output_file} and opened in your browser.")
